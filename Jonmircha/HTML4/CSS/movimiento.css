html {
	box-sizing: border-box;
	font-size: 16px;
	font-family: Verdana, Geneva, Tahoma, sans-serif;
}
body {
	margin: 0;
}

.box {
	border: thick solid #000;
	margin-left: auto;
	margin-right: auto;
	margin-bottom: 5rem;
	width: 200px;
	height: 200px;
}

.card {
	border: thick solid #000;
	margin-left: auto;
	margin-right: auto;
	margin-bottom: 5rem;
	width: 600px;
	height: 400px;
}

.card img {
	border: thick dashed black;
	width: 100%;
	height: 100%;
	object-fit: cover;
	object-position: 0 50%;
}
/* todo copiado de motion.css de el */
/* 
Transiciones
  transition-property
  transition-duration
  transition-timing-function: none linear ease ease-in ease-out ease-in-out steps
  transition-delay
  transition: property duration timing-funciton delay

  https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties  las que si se pueden animar
*/
.transition .box {
	background-color: magenta;
	transition: none; /* es un shorthand */
	transition-property: background-color; /* de lo que se trata la transicion */
	transition-duration: 500ms; /* cuanto tarda la animacion en finalizar */
	transition-timing-function: ease;
	transition-delay: 0.5s; /* cuanto espera antes de empezar y finalizar */
	transition: border-color 1s ease 0.5s; /* reemplaza la transicion anterior */
	transition: all 3s ease 0.5s; /* agarra todo y lo hace transicion */
}
.transition .box:hover {
	background-color: cyan;
	border-color: lightblue;
	border-radius: 50%;
	border-style: dashed; /* se activa pero no se anima. Hay propiedades no animables
  pero justo esta con el border radius queda re cheta */
}
.transition .card {
	transition: opacity 1s ease-out, border-color 3s steps(5),
		/* steps reemplaza ease y se divide en la cantidad de pasos que le pasemos */
			filter 2s ease-in 1s,
		box-shadow 1.5s linear 2s; /* puedo organizarlos con el delay */
}
.transition .card:hover {
	opacity: 0.75;
	border-color: tomato;
	filter: blur(0.1rem);
	box-shadow: 1rem 1rem 2rem 0.5rem black;
}
.transition .card img {
	transition: object-position 2s ease-in-out 3s;
}
.transition .card img:hover {
	object-position: 100% 50%;
}
.transform-2d img {
	transition: transform 2s ease, 5s;
}
.transform-2d img:hover {
	transform: none;
	transform: translateX(4rem);
	transform: translatey(-3rem); /* reemplaza a x */ /* -y va para arriba, wtf */
	transform: translate(4rem, 3rem); /* (x,y) */
	transform: translate(50%, -50%); /* el 50% de la caja .card */
	transform: scaleX(2); /* el doble */
	transform: scaleY(0.5);
	transform: scale(1.5, 2); /* (x,y) */
	transform: scale(-1, -1); /* se voltea */
	/* la linea de eje es un palo que atravieza la imagen y esta gira en el */
	transform: rotateX(60deg); /* gira en 3d, en el eje x de arriba para abajo */
	transform: rotateX(90deg); /* desaparece */
	transform: rotateY(90deg);
	transform: rotateY(180deg);
	transform: rotateZ(180deg);
	transform: rotate(); /* en z, son lo mismo pero sin confusion */
	transform: skewX(45deg); /* lo vuelve un paralelo gramo, rota en z a su vez*/
	transform: skewX(90deg); /* desaparece */
	transform: skewY(45deg);
	transform: skewY(180deg);
	/* 
    matrix( scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY() )
    https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()
  */
	transform: matrix(1, 2, 2, 1, 20, 10); /* pesa mucho hablando sobre proceso */
	transform: translate(25%, -50%) rotate(90080deg) scale(1.5, 1.5); /* así puedo usar 2 o mas */
}
.transform-3d img {
	transition: transform 2s ease;
}
.transform-3d {
	perspective: 10rem;
}

.transform-3d img:hover {
	transform: translateZ(4rem); /* no hace nada */
	transform: perspective(1px) translateZ(100px); /* necesito perspectiva que sería la distancia entre nosotors y el objeto */
	transform: perspective(10rem) translateZ(-100px);
	transform: translateZ(
		100px
	); /* si le pongo la perspectiva al contenedor padre me ahorro todo */
	transform: translate3d(2rem, 50%, -4rem);
	/* me aburri */
}
@keyframes spinner {
	0% {
		/* el % es de la animacion */
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}
.loading-cont {
	text-align: center;
}
.spinner {
	display: inline-block;
	background-color: white;
	width: 5vw;
	height: 5vw;
	margin: 0 auto;
	border: 0.5vw solid #00000011;
	border-left-color: cyan; /* la barra de carga */ /* puedo ponerla en top o en otro lado si no me gusta */
	border-radius: 50%;
	animation: spinner 1s ease infinite;
}
.btn {
	position: relative;
	border: none;
	border-radius: 0.25rem;
	padding: 0.2rem;
	width: 14rem;
	height: 2.5rem;
	font-size: 1.25rem;
	font-weight: bold;
	cursor: pointer;
	overflow: hidden;
	box-shadow: 0.25rem 0.25rem 0.5rem 0.25rem rgba(0, 0, 0, 0.15);
}
.anim-btn::after {
	/* no entiendo lo del after */
	content: "";
	position: absolute; /* se pega a la esquina de arriba derecha automaticamente */
	bottom: 0;
	width: 0;
	height: 0.25rem;
	background-color: red;
	transition: width 0.5s ease, left 0.5s ease, right 0.5s ease;
}
.anim-btn:hover::after {
	width: 100%;
}
.to-left::after {
	left: 0;
}
.to-center:after {
	left: 50%;
}
.to-center:hover::after {
	/* se va moviendo a la izquierda mientras se agranda hacia la derecha  */
	left: 0;
}
.to-right::after {
	right: 0;
}
/* mi test */
.testAfter {
	margin: 30px auto 0;
	/* padding-top: 15px; */
	text-align: center;
}
.testAfter:after {
	background-color: red;
	content: "";
	position: absolute;
	width: 0;
	height: 4px;
	bottom: 0;
	transition: width 0.5s ease /* , left 0.5s ease */;
	left: 0;
}
.testAfter:hover::after {
	width: 100%;
}
.bg-gradient {
	background-image: linear-gradient(to right, pink, violet, orange, red);
	background-size: 300% 100%; /* width y height */
	transition: background-position 0.5s ease;
}
.bg-gradient:hover {
	background-position: 100% 100%;
}
.tabs-menu {
	position: relative; /* esto es necesario */
	margin: 0 auto;
	background-color: tomato;
	border-radius: 1rem;
	width: 70%;
	height: 3rem;
	display: flex;
	justify-content: space-between;
	align-items: center; /* verticalmente */
}
.tabs-menu input {
	display: none;
}
.tabs-menu label {
	cursor: pointer;
	z-index: 1; /* este si */
	position: relative;
	width: calc(100% / 4);
}
.tabs-menu label:hover {
	color: white;
}
.tabs-menu input:checked + label {
	/* la sec 4 no se vuelve blanco pero lo mantengo para un ejemplo */
	/* espero el condicional de la pseudoclase y modifico el label */
	color: white;
}
.tab-bg-hover {
	position: absolute;
	z-index: 0; /* no hace falta este */
	height: 2rem;
	width: calc(100% / 4);
	border-radius: 0.5rem;
	background-image: linear-gradient(red, orange);
	transition: transform 0.3s ease;
}
#tab-1:checked ~ .tab-bg-hover {
	transform: translateX(0);
}
#tab-2:checked ~ .tab-bg-hover {
	transform: translateX(100%); /* su tmaaño */
}

#tab-3:checked ~ .tab-bg-hover {
	transform: translateX(200%);
}

#tab-4:checked + .tab-bg-hover {
	transform: translateX(300%);
}
#burguer-btn {
	display: none;
}
.burguer-label {
	position: fixed;
	z-index: 999;
	cursor: pointer;
	right: 1rem;
	bottom: 1rem;
	width: 3rem;
	height: 3rem;
	/* opacity: 0.25; */
	height: calc(
		3rem / 5
	); /* porque los 3 bloques rojos y los 2 blancos de los medios son 5 dividido el tamaño de la caja */
	background-color: red;
	border-radius: 0.3rem;
	transform: rotate(0deg) translateY(-1.8rem);
	transition: transform 1s ease, background-color 0.5s ease;
	transform-origin: top left; /* si el centro esta en esa ezquina, tenemos la ventaja de que solo rotando ya se pone en el lugar de una x perfecta(al final necesitamos el translate xd) */
}
.burguer-label::after,
.burguer-label::before {
	display: block;
	content: "";
	width: 100%;
	height: 0.6rem;
	background-color: red;
	border-radius: 0.3rem;
	transition: transform 1s ease;
}
.burguer-label::before {
	transform: translateY(-1.2rem);
}
.burguer-label::after {
	transform: translateY(
		-1ex
	); /* como se puso abajo de o escrito, le puse que suba un 1ex */
}
#burguer-btn:checked + .burguer-label {
	background-color: transparent; /* para que la del medio desaparezca */
}
#burguer-btn:checked + .burguer-label::before {
	transform: rotate(45deg) translate(-0.5rem, 0.6rem); /* fail */ /* tengo la conclusion de que no agarra y se mueve restando o sumando a lo que tenía antes, sino que es como un grafico donde las posiciones estan ocupadas */
	transform: rotate(45deg) translate(1.2rem, 1.2rem); /* lo hice un poco al azar xd. Jon le había puesto diferntes posiciones a los before y after*/
}
#burguer-btn:checked + .burguer-label::after {
	transform: rotate(-45deg) translate(0.7rem, calc(-1.2rem - 1ex)); /* la punta de arriba izquierda queda alineada a la esquina de un cuadrado imaginario, pero la primera barra no, en esa queda alineada la punta de abajo isquierda y por eso hay lío y solo vamos a mover esa */
	/* fail */
	transform: rotate(-45deg) translate(0, 0);
}
.burguer-menu {
	position: fixed;
	z-index: 998;
	width: 90vw;
	height: 90vh;
	left: calc(
		(10vw / 2) - 12px
	); /* le reste lo del scroll. No estoy seguro de que sea 12px */
	bottom: calc(10vh / 2);
	/* left: 0;
	top: 0;
	bottom: 0;
	right: 0; */
	background-color: gray;
	border: medium solid red;
	/* margin: 0 auto; */
	/* display: none; */
	opacity: 0;
	bottom: -100cm;
	left: 0; /* lo saco de la pagina asi no uso display none y puedo usar el opacity sin tener los links invisibles molestando */
	transition: opacity 1s ease, left 1.5s ease;
}
.burguer-conteiner {
	margin: 50px 0 0 100px;
}
.burguer-conteiner > * {
	display: block;
	padding: 20px;
}
#burguer-btn:checked ~ .burguer-menu {
	opacity: 1;
	bottom: calc(10vh / 2);
	left: calc((10vw / 2) - 12px);
	/* display: block; */
}
.modal {
	position: fixed;
	z-index: 996;
	left: 0;
	top: 0;
	bottom: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	/* opacity: 0; */ /* no entiendo porque afecta al elemento hijo. Puede ser que tenga sentido */
	background-color: #0008;
	transition: opacity 0.5s ease;
	pointer-events: none; /* esto soluciona el problema de antes de pone opacity pero no display none */
	opacity: 0;
	right: 0; /* se sobrescriben EJ: left a right pero en fixed como que empieza en todos lados y ocupa toda la pantalla */
}
.modal:target {
	opacity: 1;
	pointer-events: auto;
}
.modal-conteiner {
	position: relative; /* para poner la x con un absolute despues */
	border: thick double red;
	background-color: white;
	border-radius: 2rem;
	z-index: 997;
	padding: 40px;
	width: 60%;
	height: 60%;
	opacity: 1;
	display: flex;
	flex-direction: row; /* en linea(default) */
	flex-direction: column;
	text-align: left;
	overflow: hidden;
	justify-content: center;
}
.modal-close {
	position: absolute;
	top: 1rem;
	right: 1rem;
	width: 3rem;
	font-size: 2rem;
	background-color: #f00a;
	color: white;
	font-weight: bold;
	border-radius: 50%;
	text-align: center;
	text-decoration: none;
	line-height: 3rem; /* altura de linea, no de letra */
	border: medium solid black;
	transition: background-color 0.3s ease, transform 0.3s ease;
}
.modal-close:hover {
	background-color: red;
	transform: scale(1.1);
}
/* star wars */
@keyframes introStarWars {
	0% {
		transform: perspective(100vh) rotateX(15deg) translateY(100%);
	}
	100% {
		transform: perspective(100vh) rotateX(25deg) translateY(-200%); /* es como un 300  */
	}
}
.star-wars {
	padding: 50px;
	background-image: url(../assets/stars.gif);
	width: 100%;
	height: 100vw;
	overflow: hidden;
	font-size: 1.5rem;
	line-height: 4rem;
}
.star-wars-conteiner {
	animation: introStarWars 10s linear infinite;
	color: goldenrod;
	margin: 20px;
	text-align: justify; /* es como un left */
}
.star-wars h2 {
	text-align: center;
	font-size: 2rem;
}
* {
	box-sizing: border-box;
	/* ponerlo en el html no le afecto article star-wars */
}
